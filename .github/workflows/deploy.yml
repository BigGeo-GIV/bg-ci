name: Deploy

on:
  workflow_call:
    inputs:
      store_artifacts:
        required: false
        default: false
        type: boolean
      docker_deploy:
        required: false
        default: false
        type: boolean
    secrets:
      GH_ACCESS:
        required: true
      JF_ACCESS_TOKEN:
        required: true
      JF_CONAN_URL:
        required: true

jobs:
  build-and-test:
    env: {CONAN_REVISIONS_ENABLED: 1}

    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v3
      with: { submodules: recursive }

    - name: Install Python
      uses: actions/setup-python@v4
      with: { python-version: "3.8" }

    - name: Install clang
      run: |
        curl https://apt.llvm.org/llvm.sh --output /opt/llvm.sh
        chmod +x /opt/llvm.sh
        sudo /opt/llvm.sh 16

    - name: Dependencies
      uses: BigGeo-GIV/bg-ci/.github/actions/conan-dependencies@main
      with:
        JF_ACCESS_TOKEN: ${{ secrets.JF_ACCESS_TOKEN }}
        JF_CONAN_URL: ${{ secrets.JF_CONAN_URL }}

    - name: Configure
      shell: bash
      env: { CC: clang-16, CXX: clang++-16 }
      run: |
        osAry=($(echo ubuntu-22.04 | tr "-" "\n")) && os=${osAry[0]}
        cmake "--preset=ci-${os}"

    - name: Build
      run: cmake --build build --config Release -j 2

    - name: Install
      run: cmake --install build --config Release --prefix prefix

    # - name: Test
    #   working-directory: build
    #   run: ctest --output-on-failure -C Release -j 2

    - name: Upload artifacts
      if: inputs.store_artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ubuntu-22.04-executable
        path: build/

    - name: Move build artifacts
      id: version
      run: |
        mkdir -p Docker
        cp -r build/* Docker
        echo VERSION=$(cat version.txt) >> $GITHUB_OUTPUT

    - name: Set up Docker Build
      uses: docker/setup-buildx-action@v2

    - name: Docker login to Azure Registry
      uses: docker/login-action@v2
      with:
        registry: ${{secrets.BG_SEARCH_DOCKER_REGISTRY_SERVER}}
        username: ${{secrets.BG_SEARCH_DOCKER_REGISTRY_NAME}}
        password: ${{secrets.BG_SEARCH_DOCKER_REGISTRY_PSWD}}
    - name: Docker login to Snowflake Registry
      uses: docker/login-action@v2
      with:
        registry: ${{secrets.BG_SEARCH_DOCKER_REGISTRY_SF_SERVER}}
        username: ${{secrets.BG_SEARCH_DOCKER_REGISTRY_SF_NAME}}
        password: ${{secrets.BG_SEARCH_DOCKER_REGISTRY_SF_PSWD}}
    - name: Docker login to S&P Snowflake Registry
      uses: docker/login-action@v2
      with:
        registry: ${{secrets.BG_SEARCH_DOCKER_REGISTRY_SF_SP_SERVER}}
        username: ${{secrets.BG_SEARCH_DOCKER_REGISTRY_SF_SP_NAME}}
        password: ${{secrets.BG_SEARCH_DOCKER_REGISTRY_SF_SP_PSWD}}

    - name: Build and push bg-search docker image
      uses: docker/build-push-action@v3
      with:
        push: true
        context: ./Docker/
        tags: |
          crbgsearchdevwestus001.azurecr.io/bg-search-test:${{steps.version.outputs.VERSION}}
          eqcqgux-biggeoaws.registry.snowflakecomputing.com/alcyone_db/data_schema/alcyone_repository/bg_server:${{steps.version.outputs.VERSION}}
          ${{secrets.BG_SEARCH_DOCKER_REGISTRY_SF_SP_SERVER}}/bg_server:latest
        #build-args: REACT_APP_ENV=prod
