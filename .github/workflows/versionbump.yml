name: Version Bump

on:
  workflow_call:
    inputs:
      name:
        required: true
        type: string
    secrets:
      GH_ACCESS:
        required: true

jobs:
  version-bump:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        token: ${{ secrets.GH_ACCESS }}
        fetch-depth: 0

    - uses: actions/checkout@v3
      with:
        repository: BigGeo-GIV/bg-ci
        ref: main
        path: bg-ci
        token: ${{ secrets.GH_ACCESS }}

    # - name: Check for manual version change
    #   id: check
    #   run: |
    #     if git diff --name-only HEAD^ HEAD | grep version.json; then
    #       echo version and source changed: no need to bump
    #     else
    #       echo "GO=1" >> $GITHUB_OUTPUT
    #     fi

    - name: Install Python
      uses: actions/setup-python@v4
      with: { python-version: "3.10" }

    - name: Bump version (dev push)
      if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
      run: |
        git config --local user.name "github-actions[bot]"
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        prevMsg=$(git log -1 --pretty=%B)
        echo {\"commits\":[{\"messageHeadline\":\"${prevMsg}\"}]} > prevMsgs.json

        if python3 bg-ci/BumpVersion.py version.json prevMsgs.json ${{ inputs.name }} true; then
          git add version.json
          newVer=$(python3 bg-ci/GetVersion.py version.json ${{ inputs.name }} true)
          newMsg="dev""${newVer}"" - ""${prevMsg}"
          git commit -m "${newMsg}"
          git pull
        fi

    - name: Bump version (main PR)
      if: github.ref == 'refs/heads/main' && github.event_name == 'pull_request'
      run: |
        git config --local user.name "github-actions[bot]"
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        gh pr view --json commits > prevMsgs.json

        if python3 bg-ci/BumpVersion.py version.json prevMsgs.json ${{ inputs.name }} false; then
          git add version.json
          newVer=$(python3 bg-ci/GetVersion.py version.json ${{ inputs.name }} false)
          newMsg="v""${newVer}""
          git commit -m "${newMsg}"
          git pull
        fi

    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GH_ACCESS }}
        branch: ${{ github.ref }}
