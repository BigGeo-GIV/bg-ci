name: Create Image

on:
  workflow_call:
    inputs:
      dev_version:
        description: 'Deploy as dev version?'
        required: true
        type: boolean
      name:
        description: 'The name used as a key to get the version from the version.json file. Usually the name of the repo.'
        required: true
        type: string

    secrets:
      GH_ACCESS:
        required: true
      JF_ACCESS_TOKEN:
        required: true
      JF_CONAN_URL:
        required: true

jobs:
  build-image:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3
        with: { submodules: recursive }

      - uses: actions/checkout@v3
        with:
          repository: BigGeo-GIV/bg-ci
          ref: main
          path: bg-ci
          token: ${{ secrets.GH_ACCESS }}
    
      - uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_KV_AZ_PROD_CREDENTIALS }}
      - name: Retrieve secrets from KV
        id: secrets
        uses: azure/CLI@v1
        with:
          inlineScript: |
            DOCKER_REGISTRY_NAME=$(az keyvault secret show --name "registryName" --vault-name "kv-az-prod-cacentral-001" --query "value" -o tsv)
            DOCKER_REGISTRY_PASSWORD=$(az keyvault secret show --name "registryPassword" --vault-name "kv-az-prod-cacentral-001" --query "value" -o tsv)
            DOCKER_REGISTRY_SERVER=$(az keyvault secret show --name "registryServer" --vault-name "kv-az-prod-cacentral-001" --query "value" -o tsv)
            echo "::add-mask::$DOCKER_REGISTRY_NAME"
            echo "::add-mask::$DOCKER_REGISTRY_PASSWORD"
            echo "::add-mask::$DOCKER_REGISTRY_SERVER"
            echo "DOCKER_REGISTRY_NAME="$DOCKER_REGISTRY_NAME >> $GITHUB_ENV
            echo "DOCKER_REGISTRY_PASSWORD="$DOCKER_REGISTRY_PASSWORD >> $GITHUB_ENV
            echo "DOCKER_REGISTRY_SERVER="$DOCKER_REGISTRY_SERVER >> $GITHUB_ENV
      
      - uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_KV_SF_PROD_CREDENTIALS }}
      - name: Retrieve secrets from KV
        id: secrets
        uses: azure/CLI@v1
        with:
          inlineScript: |
            GITHUBCI_SF_USERNAME=$(az keyvault secret show --name "GITHUBCIUsername" --vault-name "kv-sf-prod-cacentral-001" --query "value" -o tsv)
            GITHUBCI_SF_PASSWORD=$(az keyvault secret show --name "GITHUBCIPassword" --vault-name "kv-sf-prod-cacentral-001" --query "value" -o tsv)
            echo "::add-mask::$GITHUBCI_SF_USERNAME"
            echo "::add-mask::$GITHUBCI_SF_PASSWORD"
            echo "GITHUBCI_SF_USERNAME="$GITHUBCI_SF_USERNAME >> $GITHUB_ENV
            echo "GITHUBCI_SF_PASSWORD="$GITHUBCI_SF_PASSWORD >> $GITHUB_ENV

      - name: Get version
        id: version
        run: |
          if [ ${{ inputs.dev_version }} = true ]; then
            prefix=dev-
            stageOrLatest=stage
          else
            stageOrLatest=latest
          fi
          ver=$(python3 bg-ci/GetVersion.py version.json ${{ inputs.name }} ${{ inputs.dev_version }})
          echo "VERSION=${prefix}${ver}" >> "$GITHUB_OUTPUT"
          echo "STAGE_OR_LATEST=${stageOrLatest}" >> "$GITHUB_OUTPUT"

      - name: Set up Docker Build
        uses: docker/setup-buildx-action@v2

      - name: Docker log in
        uses: BigGeo-GIV/bg-ci/.github/actions/docker-login@main
        with:
          # DOCKER_USER: ${{ secrets.SNOWFLAKE_USERNAME }}
          # DOCKER_PASS: ${{ secrets.SNOWFLAKE_PASSWORD_CA_CENTRAL }}
          DOCKER_USER_OREGON: ${{ env.GITHUBCI_SF_USERNAME }}
          DOCKER_PASS_OREGON: ${{ env.GITHUBCI_SF_PASSWORD }}
          BG_SEARCH_DOCKER_REGISTRY_AZ_SERVER: ${{ env.DOCKER_REGISTRY_SERVER }}
          BG_SEARCH_DOCKER_REGISTRY_AZ_NAME: ${{ env.DOCKER_REGISTRY_NAME }}
          BG_SEARCH_DOCKER_REGISTRY_AZ_PSWD: ${{ env.DOCKER_REGISTRY_PASSWORD }}

      - name: Build and push bg-search to Azure
        uses: docker/build-push-action@v3
        with:
          push: true
          context: ./
          tags: |
            crbgsearchdevwestus001.azurecr.io/bg-search:${{ steps.version.outputs.VERSION }}
            crbgsearchdevwestus001.azurecr.io/bg-search:${{ steps.version.outputs.STAGE_OR_LATEST }}
          build-args: |
            CONAN_URL=${{ secrets.JF_CONAN_URL }}
            CONAN_USER=github_workflow
            CONAN_PSWD=${{ secrets.JF_ACCESS_TOKEN }}
            DEV=${{ inputs.dev_version }}}

      - name: Build and push bg-search to Snowflake
        uses: docker/build-push-action@v3
        with:
          push: true
          context: ./
          tags: |
            eqcqgux-biggeoawsoregon.registry.snowflakecomputing.com/spdemo/data_schema/alcyone_repository/bg_server:${{ steps.version.outputs.VERSION }}
            eqcqgux-biggeoawsoregon.registry.snowflakecomputing.com/spdemo/data_schema/alcyone_repository/bg_server:${{ steps.version.outputs.STAGE_OR_LATEST }}
            eqcqgux-biggeoaws.registry.snowflakecomputing.com/alcyone_db/data_schema/alcyone_repository/bg_server:${{ steps.version.outputs.VERSION }}
            eqcqgux-biggeoaws.registry.snowflakecomputing.com/alcyone_db/data_schema/alcyone_repository/bg_server:${{ steps.version.outputs.STAGE_OR_LATEST }}
          build-args: |
            CONAN_URL=${{ secrets.JF_CONAN_URL }}
            CONAN_USER=github_workflow
            CONAN_PSWD=${{ secrets.JF_ACCESS_TOKEN }}
