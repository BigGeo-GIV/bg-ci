name: "Conan dependencies"
description: "Gets conan dependencies"
inputs:
  JF_ACCESS_TOKEN:
    description: Access token for conan repo
    required: true
  JF_CONAN_URL:
    description: URL of conan repo
    required: true
  BUILD_TYPE:
    description: CMake Build Type
    required: false
    default: Release

runs:
  using: "composite"
  steps:
    - name: Install Conan dependencies
      shell: bash
      run: |
        pip3 install "conan<2"
        if [ ${{ runner.os }} = macOS ]; then
          export CC=/usr/local/opt/llvm@16/bin/clang
          export CXX=/usr/local/opt/llvm@16/bin/clang++
        fi
        if [ ${{ runner.os }} = Windows ]; then
          export CC=clang
          export CXX=clang++

          clang --version
          clang++ --version
        fi
        conan profile new default --detect
        if [ ${{ runner.os }} = Linux ]; then
          conan profile update settings.compiler.libcxx=libstdc++11 default
        fi
        if [ ${{ runner.os }} = macOS ]; then
          conan profile update settings.compiler.libcxx=libc++ default
        fi
        conan profile update settings.compiler.cppstd=20 default
        conan profile update conf.tools.system.package_manager:mode=install default
        conan profile update conf.tools.system.package_manager:sudo=True default
        conan remote add bg-conan ${{ inputs.JF_CONAN_URL }}
        conan user -p ${{ inputs.JF_ACCESS_TOKEN }} -r bg-conan github_workflow
        conan install . -s build_type=${{ inputs.BUILD_TYPE }} -b missing -pr:b=default -pr:h=default
        conan upload "*" --all -r bg-conan -c
